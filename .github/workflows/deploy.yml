name: Deploy Training Server

on:
  workflow_dispatch:
    inputs:
      docker_image:
        description: "Docker image to deploy (DEFAULT tssl_bl_srv)"
        required: true
        default: "tssl_bl_srv"
      docker_image_version:
        description: "Docker image version to deploy (DEFAULT latest)"
        required: true
        default: "latest"

jobs:
  pull-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.REMOTE_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.REMOTE_SERVER_IP }} >> ~/.ssh/known_hosts

    - name: Deploy on Remote Server
      run: |
        ssh -T -i ~/.ssh/id_rsa ${{ secrets.REMOTE_SERVER_USER }}@${{ secrets.REMOTE_SERVER_IP }} << EOF
        # Disable 'set -e' for more control
        set +e

        echo "Logging into Docker..."
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        
        echo "Pulling Docker image..."
        docker pull ${{ secrets.DOCKER_USERNAME }}/${{ github.event.inputs.docker_image }}:${{ github.event.inputs.docker_image_version }}
        
        echo "Stopping existing container (if any)..."
        docker stop tssl_sample_srv || true
        docker rm tssl_sample_srv || true
        
        echo "Starting new Docker container..."
        docker run -d --name tssl_sample_srv -p 7210:7210/tcp -p 7210:7210/udp ${{ secrets.DOCKER_USERNAME }}/${{ github.event.inputs.docker_image }}:${{ github.event.inputs.docker_image_version }}
        
        echo "Checking running containers..."
        docker ps
        
        echo "Deployment completed successfully."
        EOF
